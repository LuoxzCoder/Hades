# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  blas_config = debug
  f2c_config = debug
  lapack_config = debug
  lfs_config = debug
  lbase64_config = debug
  cjson_config = debug
  luasec_config = debug
  luaxml_config = debug
  zlib_config = debug
  jpeg_config = debug
  png_config = debug
  ipng_config = debug
  ijpeg_config = debug
  image_config = debug
  paths_config = debug
  sys_config = debug
  torchluaT_config = debug
  torchTH_config = debug
  THNN_config = debug
  randomkit_config = debug
  torch_config = debug
  nnx_config = debug
  mime_config = debug
  socket_config = debug
  eastl_config = debug
  crowd_config = debug
  detour_config = debug
  platform_config = debug
  hadescore_config = debug
  servicesnode_config = debug
  linuxfilesystem_config = debug
  fileconsolelogsystem_config = debug
  jsonconfiguresystem_config = debug
  libeventserversystem_config = debug
  libeventsocketsystem_config = debug
  hadesmessagesystem_config = debug
  idipmessagesystem_config = debug
  mulitlibeventserversystem_config = debug
  flatserializesystem_config = debug
  libeventtimersystem_config = debug
  localservicessystem_config = debug
  remoteservicessystem_config = debug
  pthreadsystem_config = debug
  luascritpsystem_config = debug
  mathfunction_config = debug
  machinestatus_config = debug
  libeventhttpserver_config = debug
  libeventmulithttpserver_config = debug
  recastnavigation_config = debug
  thulacfunction_config = debug
endif
ifeq ($(config),release)
  blas_config = release
  f2c_config = release
  lapack_config = release
  lfs_config = release
  lbase64_config = release
  cjson_config = release
  luasec_config = release
  luaxml_config = release
  zlib_config = release
  jpeg_config = release
  png_config = release
  ipng_config = release
  ijpeg_config = release
  image_config = release
  paths_config = release
  sys_config = release
  torchluaT_config = release
  torchTH_config = release
  THNN_config = release
  randomkit_config = release
  torch_config = release
  nnx_config = release
  mime_config = release
  socket_config = release
  eastl_config = release
  crowd_config = release
  detour_config = release
  platform_config = release
  hadescore_config = release
  servicesnode_config = release
  linuxfilesystem_config = release
  fileconsolelogsystem_config = release
  jsonconfiguresystem_config = release
  libeventserversystem_config = release
  libeventsocketsystem_config = release
  hadesmessagesystem_config = release
  idipmessagesystem_config = release
  mulitlibeventserversystem_config = release
  flatserializesystem_config = release
  libeventtimersystem_config = release
  localservicessystem_config = release
  remoteservicessystem_config = release
  pthreadsystem_config = release
  luascritpsystem_config = release
  mathfunction_config = release
  machinestatus_config = release
  libeventhttpserver_config = release
  libeventmulithttpserver_config = release
  recastnavigation_config = release
  thulacfunction_config = release
endif

PROJECTS := blas f2c lapack lfs lbase64 cjson luasec luaxml zlib jpeg png ipng ijpeg image paths sys torchluaT torchTH THNN randomkit torch nnx mime socket eastl crowd detour platform hadescore servicesnode linuxfilesystem fileconsolelogsystem jsonconfiguresystem libeventserversystem libeventsocketsystem hadesmessagesystem idipmessagesystem mulitlibeventserversystem flatserializesystem libeventtimersystem localservicessystem remoteservicessystem pthreadsystem luascritpsystem mathfunction machinestatus libeventhttpserver libeventmulithttpserver recastnavigation thulacfunction

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

blas:
ifneq (,$(blas_config))
	@echo "==== Building blas ($(blas_config)) ===="
	@${MAKE} --no-print-directory -C . -f blas.make config=$(blas_config)
endif

f2c:
ifneq (,$(f2c_config))
	@echo "==== Building f2c ($(f2c_config)) ===="
	@${MAKE} --no-print-directory -C . -f f2c.make config=$(f2c_config)
endif

lapack:
ifneq (,$(lapack_config))
	@echo "==== Building lapack ($(lapack_config)) ===="
	@${MAKE} --no-print-directory -C . -f lapack.make config=$(lapack_config)
endif

lfs:
ifneq (,$(lfs_config))
	@echo "==== Building lfs ($(lfs_config)) ===="
	@${MAKE} --no-print-directory -C . -f lfs.make config=$(lfs_config)
endif

lbase64:
ifneq (,$(lbase64_config))
	@echo "==== Building lbase64 ($(lbase64_config)) ===="
	@${MAKE} --no-print-directory -C . -f lbase64.make config=$(lbase64_config)
endif

cjson:
ifneq (,$(cjson_config))
	@echo "==== Building cjson ($(cjson_config)) ===="
	@${MAKE} --no-print-directory -C . -f cjson.make config=$(cjson_config)
endif

luasec:
ifneq (,$(luasec_config))
	@echo "==== Building luasec ($(luasec_config)) ===="
	@${MAKE} --no-print-directory -C . -f luasec.make config=$(luasec_config)
endif

luaxml:
ifneq (,$(luaxml_config))
	@echo "==== Building luaxml ($(luaxml_config)) ===="
	@${MAKE} --no-print-directory -C . -f luaxml.make config=$(luaxml_config)
endif

zlib:
ifneq (,$(zlib_config))
	@echo "==== Building zlib ($(zlib_config)) ===="
	@${MAKE} --no-print-directory -C . -f zlib.make config=$(zlib_config)
endif

jpeg:
ifneq (,$(jpeg_config))
	@echo "==== Building jpeg ($(jpeg_config)) ===="
	@${MAKE} --no-print-directory -C . -f jpeg.make config=$(jpeg_config)
endif

png:
ifneq (,$(png_config))
	@echo "==== Building png ($(png_config)) ===="
	@${MAKE} --no-print-directory -C . -f png.make config=$(png_config)
endif

ipng: png zlib
ifneq (,$(ipng_config))
	@echo "==== Building ipng ($(ipng_config)) ===="
	@${MAKE} --no-print-directory -C . -f ipng.make config=$(ipng_config)
endif

ijpeg: jpeg
ifneq (,$(ijpeg_config))
	@echo "==== Building ijpeg ($(ijpeg_config)) ===="
	@${MAKE} --no-print-directory -C . -f ijpeg.make config=$(ijpeg_config)
endif

image:
ifneq (,$(image_config))
	@echo "==== Building image ($(image_config)) ===="
	@${MAKE} --no-print-directory -C . -f image.make config=$(image_config)
endif

paths:
ifneq (,$(paths_config))
	@echo "==== Building paths ($(paths_config)) ===="
	@${MAKE} --no-print-directory -C . -f paths.make config=$(paths_config)
endif

sys:
ifneq (,$(sys_config))
	@echo "==== Building sys ($(sys_config)) ===="
	@${MAKE} --no-print-directory -C . -f sys.make config=$(sys_config)
endif

torchluaT:
ifneq (,$(torchluaT_config))
	@echo "==== Building torchluaT ($(torchluaT_config)) ===="
	@${MAKE} --no-print-directory -C . -f torchluaT.make config=$(torchluaT_config)
endif

torchTH:
ifneq (,$(torchTH_config))
	@echo "==== Building torchTH ($(torchTH_config)) ===="
	@${MAKE} --no-print-directory -C . -f torchTH.make config=$(torchTH_config)
endif

THNN:
ifneq (,$(THNN_config))
	@echo "==== Building THNN ($(THNN_config)) ===="
	@${MAKE} --no-print-directory -C . -f THNN.make config=$(THNN_config)
endif

randomkit:
ifneq (,$(randomkit_config))
	@echo "==== Building randomkit ($(randomkit_config)) ===="
	@${MAKE} --no-print-directory -C . -f randomkit.make config=$(randomkit_config)
endif

torch:
ifneq (,$(torch_config))
	@echo "==== Building torch ($(torch_config)) ===="
	@${MAKE} --no-print-directory -C . -f torch.make config=$(torch_config)
endif

nnx:
ifneq (,$(nnx_config))
	@echo "==== Building nnx ($(nnx_config)) ===="
	@${MAKE} --no-print-directory -C . -f nnx.make config=$(nnx_config)
endif

mime:
ifneq (,$(mime_config))
	@echo "==== Building mime ($(mime_config)) ===="
	@${MAKE} --no-print-directory -C . -f mime.make config=$(mime_config)
endif

socket:
ifneq (,$(socket_config))
	@echo "==== Building socket ($(socket_config)) ===="
	@${MAKE} --no-print-directory -C . -f socket.make config=$(socket_config)
endif

eastl:
ifneq (,$(eastl_config))
	@echo "==== Building eastl ($(eastl_config)) ===="
	@${MAKE} --no-print-directory -C . -f eastl.make config=$(eastl_config)
endif

crowd:
ifneq (,$(crowd_config))
	@echo "==== Building crowd ($(crowd_config)) ===="
	@${MAKE} --no-print-directory -C . -f crowd.make config=$(crowd_config)
endif

detour:
ifneq (,$(detour_config))
	@echo "==== Building detour ($(detour_config)) ===="
	@${MAKE} --no-print-directory -C . -f detour.make config=$(detour_config)
endif

platform:
ifneq (,$(platform_config))
	@echo "==== Building platform ($(platform_config)) ===="
	@${MAKE} --no-print-directory -C . -f platform.make config=$(platform_config)
endif

hadescore: platform eastl
ifneq (,$(hadescore_config))
	@echo "==== Building hadescore ($(hadescore_config)) ===="
	@${MAKE} --no-print-directory -C . -f hadescore.make config=$(hadescore_config)
endif

servicesnode:
ifneq (,$(servicesnode_config))
	@echo "==== Building servicesnode ($(servicesnode_config)) ===="
	@${MAKE} --no-print-directory -C . -f servicesnode.make config=$(servicesnode_config)
endif

linuxfilesystem:
ifneq (,$(linuxfilesystem_config))
	@echo "==== Building linuxfilesystem ($(linuxfilesystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f linuxfilesystem.make config=$(linuxfilesystem_config)
endif

fileconsolelogsystem:
ifneq (,$(fileconsolelogsystem_config))
	@echo "==== Building fileconsolelogsystem ($(fileconsolelogsystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f fileconsolelogsystem.make config=$(fileconsolelogsystem_config)
endif

jsonconfiguresystem:
ifneq (,$(jsonconfiguresystem_config))
	@echo "==== Building jsonconfiguresystem ($(jsonconfiguresystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f jsonconfiguresystem.make config=$(jsonconfiguresystem_config)
endif

libeventserversystem:
ifneq (,$(libeventserversystem_config))
	@echo "==== Building libeventserversystem ($(libeventserversystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f libeventserversystem.make config=$(libeventserversystem_config)
endif

libeventsocketsystem:
ifneq (,$(libeventsocketsystem_config))
	@echo "==== Building libeventsocketsystem ($(libeventsocketsystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f libeventsocketsystem.make config=$(libeventsocketsystem_config)
endif

hadesmessagesystem:
ifneq (,$(hadesmessagesystem_config))
	@echo "==== Building hadesmessagesystem ($(hadesmessagesystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f hadesmessagesystem.make config=$(hadesmessagesystem_config)
endif

idipmessagesystem:
ifneq (,$(idipmessagesystem_config))
	@echo "==== Building idipmessagesystem ($(idipmessagesystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f idipmessagesystem.make config=$(idipmessagesystem_config)
endif

mulitlibeventserversystem:
ifneq (,$(mulitlibeventserversystem_config))
	@echo "==== Building mulitlibeventserversystem ($(mulitlibeventserversystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f mulitlibeventserversystem.make config=$(mulitlibeventserversystem_config)
endif

flatserializesystem:
ifneq (,$(flatserializesystem_config))
	@echo "==== Building flatserializesystem ($(flatserializesystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f flatserializesystem.make config=$(flatserializesystem_config)
endif

libeventtimersystem:
ifneq (,$(libeventtimersystem_config))
	@echo "==== Building libeventtimersystem ($(libeventtimersystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f libeventtimersystem.make config=$(libeventtimersystem_config)
endif

localservicessystem:
ifneq (,$(localservicessystem_config))
	@echo "==== Building localservicessystem ($(localservicessystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f localservicessystem.make config=$(localservicessystem_config)
endif

remoteservicessystem:
ifneq (,$(remoteservicessystem_config))
	@echo "==== Building remoteservicessystem ($(remoteservicessystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f remoteservicessystem.make config=$(remoteservicessystem_config)
endif

pthreadsystem:
ifneq (,$(pthreadsystem_config))
	@echo "==== Building pthreadsystem ($(pthreadsystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f pthreadsystem.make config=$(pthreadsystem_config)
endif

luascritpsystem:
ifneq (,$(luascritpsystem_config))
	@echo "==== Building luascritpsystem ($(luascritpsystem_config)) ===="
	@${MAKE} --no-print-directory -C . -f luascritpsystem.make config=$(luascritpsystem_config)
endif

mathfunction:
ifneq (,$(mathfunction_config))
	@echo "==== Building mathfunction ($(mathfunction_config)) ===="
	@${MAKE} --no-print-directory -C . -f mathfunction.make config=$(mathfunction_config)
endif

machinestatus:
ifneq (,$(machinestatus_config))
	@echo "==== Building machinestatus ($(machinestatus_config)) ===="
	@${MAKE} --no-print-directory -C . -f machinestatus.make config=$(machinestatus_config)
endif

libeventhttpserver:
ifneq (,$(libeventhttpserver_config))
	@echo "==== Building libeventhttpserver ($(libeventhttpserver_config)) ===="
	@${MAKE} --no-print-directory -C . -f libeventhttpserver.make config=$(libeventhttpserver_config)
endif

libeventmulithttpserver:
ifneq (,$(libeventmulithttpserver_config))
	@echo "==== Building libeventmulithttpserver ($(libeventmulithttpserver_config)) ===="
	@${MAKE} --no-print-directory -C . -f libeventmulithttpserver.make config=$(libeventmulithttpserver_config)
endif

recastnavigation: detour crowd
ifneq (,$(recastnavigation_config))
	@echo "==== Building recastnavigation ($(recastnavigation_config)) ===="
	@${MAKE} --no-print-directory -C . -f recastnavigation.make config=$(recastnavigation_config)
endif

thulacfunction:
ifneq (,$(thulacfunction_config))
	@echo "==== Building thulacfunction ($(thulacfunction_config)) ===="
	@${MAKE} --no-print-directory -C . -f thulacfunction.make config=$(thulacfunction_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f blas.make clean
	@${MAKE} --no-print-directory -C . -f f2c.make clean
	@${MAKE} --no-print-directory -C . -f lapack.make clean
	@${MAKE} --no-print-directory -C . -f lfs.make clean
	@${MAKE} --no-print-directory -C . -f lbase64.make clean
	@${MAKE} --no-print-directory -C . -f cjson.make clean
	@${MAKE} --no-print-directory -C . -f luasec.make clean
	@${MAKE} --no-print-directory -C . -f luaxml.make clean
	@${MAKE} --no-print-directory -C . -f zlib.make clean
	@${MAKE} --no-print-directory -C . -f jpeg.make clean
	@${MAKE} --no-print-directory -C . -f png.make clean
	@${MAKE} --no-print-directory -C . -f ipng.make clean
	@${MAKE} --no-print-directory -C . -f ijpeg.make clean
	@${MAKE} --no-print-directory -C . -f image.make clean
	@${MAKE} --no-print-directory -C . -f paths.make clean
	@${MAKE} --no-print-directory -C . -f sys.make clean
	@${MAKE} --no-print-directory -C . -f torchluaT.make clean
	@${MAKE} --no-print-directory -C . -f torchTH.make clean
	@${MAKE} --no-print-directory -C . -f THNN.make clean
	@${MAKE} --no-print-directory -C . -f randomkit.make clean
	@${MAKE} --no-print-directory -C . -f torch.make clean
	@${MAKE} --no-print-directory -C . -f nnx.make clean
	@${MAKE} --no-print-directory -C . -f mime.make clean
	@${MAKE} --no-print-directory -C . -f socket.make clean
	@${MAKE} --no-print-directory -C . -f eastl.make clean
	@${MAKE} --no-print-directory -C . -f crowd.make clean
	@${MAKE} --no-print-directory -C . -f detour.make clean
	@${MAKE} --no-print-directory -C . -f platform.make clean
	@${MAKE} --no-print-directory -C . -f hadescore.make clean
	@${MAKE} --no-print-directory -C . -f servicesnode.make clean
	@${MAKE} --no-print-directory -C . -f linuxfilesystem.make clean
	@${MAKE} --no-print-directory -C . -f fileconsolelogsystem.make clean
	@${MAKE} --no-print-directory -C . -f jsonconfiguresystem.make clean
	@${MAKE} --no-print-directory -C . -f libeventserversystem.make clean
	@${MAKE} --no-print-directory -C . -f libeventsocketsystem.make clean
	@${MAKE} --no-print-directory -C . -f hadesmessagesystem.make clean
	@${MAKE} --no-print-directory -C . -f idipmessagesystem.make clean
	@${MAKE} --no-print-directory -C . -f mulitlibeventserversystem.make clean
	@${MAKE} --no-print-directory -C . -f flatserializesystem.make clean
	@${MAKE} --no-print-directory -C . -f libeventtimersystem.make clean
	@${MAKE} --no-print-directory -C . -f localservicessystem.make clean
	@${MAKE} --no-print-directory -C . -f remoteservicessystem.make clean
	@${MAKE} --no-print-directory -C . -f pthreadsystem.make clean
	@${MAKE} --no-print-directory -C . -f luascritpsystem.make clean
	@${MAKE} --no-print-directory -C . -f mathfunction.make clean
	@${MAKE} --no-print-directory -C . -f machinestatus.make clean
	@${MAKE} --no-print-directory -C . -f libeventhttpserver.make clean
	@${MAKE} --no-print-directory -C . -f libeventmulithttpserver.make clean
	@${MAKE} --no-print-directory -C . -f recastnavigation.make clean
	@${MAKE} --no-print-directory -C . -f thulacfunction.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   blas"
	@echo "   f2c"
	@echo "   lapack"
	@echo "   lfs"
	@echo "   lbase64"
	@echo "   cjson"
	@echo "   luasec"
	@echo "   luaxml"
	@echo "   zlib"
	@echo "   jpeg"
	@echo "   png"
	@echo "   ipng"
	@echo "   ijpeg"
	@echo "   image"
	@echo "   paths"
	@echo "   sys"
	@echo "   torchluaT"
	@echo "   torchTH"
	@echo "   THNN"
	@echo "   randomkit"
	@echo "   torch"
	@echo "   nnx"
	@echo "   mime"
	@echo "   socket"
	@echo "   eastl"
	@echo "   crowd"
	@echo "   detour"
	@echo "   platform"
	@echo "   hadescore"
	@echo "   servicesnode"
	@echo "   linuxfilesystem"
	@echo "   fileconsolelogsystem"
	@echo "   jsonconfiguresystem"
	@echo "   libeventserversystem"
	@echo "   libeventsocketsystem"
	@echo "   hadesmessagesystem"
	@echo "   idipmessagesystem"
	@echo "   mulitlibeventserversystem"
	@echo "   flatserializesystem"
	@echo "   libeventtimersystem"
	@echo "   localservicessystem"
	@echo "   remoteservicessystem"
	@echo "   pthreadsystem"
	@echo "   luascritpsystem"
	@echo "   mathfunction"
	@echo "   machinestatus"
	@echo "   libeventhttpserver"
	@echo "   libeventmulithttpserver"
	@echo "   recastnavigation"
	@echo "   thulacfunction"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"